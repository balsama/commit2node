<?php
/**
 * Implements hook_github_webhook_event().
 *
 * Hook fired when a payload is received from a GitHub Service hook.
 *
 * @param array $payload
 *   The parsed JSON that was sent by GitHub.
 * @param array &$response
 *   An array containing the JSON response returned to the server that invoked
 *   the webhook. The array is structured as follows:
 *   - status: Either "ok" or "error".
 *   - messages: An array of messages describing what happened.
 *   - ...: Any additional data that you want to pass to the invoking server.
 * @param array $args
 *   The arguments that are passed through wildcards in the path.
 *
 * @see github_webhook_payload()
 * @see https://help.github.com/articles/post-receive-hooks
 */
function commit2node_github_webhook_event($payload, &$response, $args) {
  // Check that our response is OK
  // ...

  // Check to see if another node already has this commit ID.
  // ...
  // If so, update it as a revision
  // ...
  // Else, create a new node
  commit2node_create_commitnode($payload);

  // Store the fact that the node was created.
  watchdog('commit2node', 'Created new Commit Node from repository %name. Commit ID: %commit_id', array('%name' => $payload['repository']['name'], '%commit_id' => $payload['commits']['id']));
}

/**
 * Creates a new node from date provided by GitHub webhook.
 */
function commit2node_create_commitnode($payload) {
  $node = new stdClass();
  $node->type = 'commit';
  $node->title = truncate_utf8($payload['head_commit']['message'], 254, FALSE, TRUE);
  $node->language = LANGUAGE_NONE;
  $node->path = array('alias' => 'commit/' . $payload['head_commit']['id']);
  node_object_prepare($node); // Set some default values.
  $node->uid = 1;

  // Custom field values
  $node->field_commit_author[$node->language][0]['value'] = $payload['head_commit']['author']['name'];
  $node->field_commit_message[$node->language][0]['value'] = $payload['head_commit']['message'];
  $node->field_commit_repository[$node->language][0]['value'] = $payload['repository']['name'];
  $node->field_commit_id[$node->language][0]['value'] = $payload['head_commit']['id'];

  // Prepare the node for submit
  $node = node_submit($node);

  // Save the node and return the new node's ID.
  return node_save($node);
}

